
# uwsgi daemon config
# https://uwsgi-docs.readthedocs.io/en/latest/Options.html

# old: local dev - plain python, no docker
[uwsgi-debug]
env = FLASK_ENV=development
env = PYSRV_CONFIG_PATH=conf/server-config.json
http = localhost:8100
master = 1
wsgi-file = py/main.py
callable = app
# processes = 1, otherwise autoreload fails
processes = 1
stats = 127.0.0.1:9100
virtualenv = $(SERVER_VIRTUALENV)
py-autoreload = 1
#harakiri=10 - disable locally, otherwise autoreload fails
disable-logging=1
spooler-quiet=1
spooler-processes=1
spooler-frequency=5
spooler-harakiri=600
spooler = /tmp/my_spooler
# few static files - serve the frontend from elsewhere
static-map = /robots.txt=conf/robots.txt
static-map = /favicon.ico=conf/favicon.ico


# local dev with docker - py-autoreload enabled
[uwsgi-debug-docker]
env = FLASK_ENV=development
env = PYSRV_CONFIG_PATH=/app/conf/server-config-localdev.json
http = 0.0.0.0:80
# if using nginx and uwsgi_pass:
# uwsgi-socket = localhost:8010
master = 1
wsgi-file = py/main.py
callable = app
processes = 4
chdir = /app/
pythonpath = /app/py/
py-autoreload = 1
disable-logging=1
spooler-quiet=1
spooler-processes=3
spooler-frequency=5
spooler-max-tasks=100
spooler-harakiri=600
spooler = /tmp/pysrv_spooler
vacuum = true
logger = stdio
# workers live max this many requests and secs
max-requests=100
max-worker-lifetime=36000
# few static files - serve the frontend from elsewhere
static-map = /robots.txt=conf/robots.txt
static-map = /favicon.ico=conf/favicon.ico
mule = py/mule1.py

# test/production server config - plain python and docker
[uwsgi-production]
plugins = corerouter,python3,logfile,spooler,http
env=PYSRV_CONFIG_PATH=/app/real-server-config.json
# http :8110 is externally available, localhost:8110 is not
http = localhost:8110
# if using nginx and uwsgi_pass:
# uwsgi-socket = localhost:8010
master = 1
wsgi-file = py/main.py
callable = app
processes = 4
chdir = /app/
pythonpath = /app/py/
virtualenv = /app/PYENV/
# deploy-script touches this file and uwsgi restarts
touch-reload=/app/RESTART
harakiri=20
disable-logging=1
spooler-quiet=1
spooler-processes=3
spooler-frequency=5
spooler-max-tasks=100
spooler-harakiri=600
spooler = /tmp/pysrv_spooler
vacuum = true
# log to file (and stdout too so docker run locally works)
logger = file:/app/app.log
logger = stdio
# run as this user - MUST SET LOWER PRIVILEGES! (Port 80 requires root)
uid=myapp
; gid=appgroup
# workers live max this many requests and secs
max-requests=100
max-worker-lifetime=36000
# few static files - serve the frontend from elsewhere
static-map = /robots.txt=conf/robots.txt
static-map = /favicon.ico=conf/favicon.ico
mule = py/mule1.py

